#!wing
#!version=8.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.breakpoints = {loc('mangle.py'): {23: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('../../../../../../Program Files (x86)/Wing Pro 8/src/debug/tserver/_sandbox.py'): {},
                    loc('iter1.py'): {}}
debug.show-args-dialog = {loc('bus_route_analysis.py'): False,
                          loc('stock.py'): False}
edit.multi-select-popup-size = (245,
                                118)
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'OJ3Fx9W1Kd3mGN1Mpfzm8rnLXBJvaR07',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.19624217118997914,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(0,)],
                                 'top-node': (0,)},
                        'flat': {'expanded-nodes': [(0,),
        (1,),
        (2,)],
                                 'selected-nodes': [(2,
        18)],
                                 'top-node': (2,
        5)}},
        'tree-style': 'flat'}}),
                              ('debug-watch',
                               'tall',
                               0,
                               {'node-states': [],
                                'tree-state': {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': (0,)}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../../../Program Files/ArcGIS/Pro/Resources/ArcPy/arcpy/_mp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Program Files/ArcGIS/Pro/Resources/ArcPy/arcpy/_mp.py'),
                      'ArcGISProject')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/Resources/ArcPy/arcpy/geoprocessing/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Program Files/ArcGIS/Pro/Resources/ArcPy/arcpy/geoprocessing/_base.py'),
                      'basestring')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/Resources/ArcPy/arcpy/management.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Program Files/ArcGIS/Pro/Resources/ArcPy/arcpy/management.py'),
                      'Add3DFormats')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/Resources/ArcPy/arcpy/utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Program Files/ArcGIS/Pro/Resources/ArcPy/arcpy/utils.py'),
                      'ADDITIONAL_ITEMS')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/arcgis/_impl/common/_mixins.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/arcgis/_impl/common/_mixins.py'),
                      'Attr')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/arcgis/gis/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/arcgis/gis/admin/__init__.py'),
                      '')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/arcgis/gis/_impl/_con/_connection.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/arcgis/gis/_impl/_con/_connection.py'),
                      'arcpy')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/arcgis/mapping/_types.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/arcgis/mapping/_types.py'),
                      'Events')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/arcgisscripting/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/arcgisscripting/__init__.py'),
                      'active_pyd_pth')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/openpyxl/cell/cell.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/openpyxl/cell/cell.py'),
                      'Cell')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/openpyxl/workbook/workbook.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/openpyxl/workbook/workbook.py'),
                      'INTEGER_TYPES')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/openpyxl/worksheet/worksheet.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/site-packages/openpyxl/worksheet/worksheet.py'),
                      'Worksheet')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/xml/dom/expatbuilder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/xml/dom/expatbuilder.py'),
                      'CDATA_SECTION_NODE')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/xml/etree/ElementPath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/xml/etree/ElementPath.py'),
                      'find')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/xml/etree/ElementTree.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../Program Files (x86)/Wing Pro 8/resources/typeshed/stdlib/2and3/xml/etree/ElementTree.pyi'),
                      'C14NWriterTarget')]},
        loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/zipfile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../Program Files/ArcGIS/Pro/bin/Python/envs/arcgispro-py3/Lib/zipfile.py'),
                      'BadZipFile')]},
        loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/archive/backup_pys_02072023/fpl_reporting_main.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/archive/backup_pys_02072023/fpl_reporting_main.py'),
                      'aprx')]},
        loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/fpl_boq_strand.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/fpl_boq_strand.py'),
                      'find_strand_QC')]},
        loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/fpl_reporting_main.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/fpl_reporting_main.py'),
                      'aprx')]},
        loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/fpl_reporting_mm_dashboard.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/fpl_reporting_mm_dashboard.py'),
                      'contractor_major_materials')]},
        loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/fpl_reporting_ratecase_dashboard.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/fpl_reporting_ratecase_dashboard.py'),
                      'contractor_redline')]},
        loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/testmelater_adderlengths.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../boq_reporting_jt/boq reporting/boq reporting/testmelater_adderlengths.py'),
                      'search_line_sum_adder')]},
        loc('../../../../../../boq_reporting_jt/boq reporting/find_asbuilt/find_asbuilts.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../../../maverick_scripts/projects/approval_maps/approval_wm_edits.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../maverick_scripts/projects/approval_maps/approval_wm_edits.py'),
                      'main')]},
        loc('../../../../../../maverick_scripts/projects/approval_maps/maverick_collectfeatures.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../maverick_scripts/projects/approval_maps/maverick_collectfeatures.py'),
                      'cleanup')]},
        loc('../../../../../../maverick_scripts/projects/approval_maps/symbol_setter.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../maverick_scripts/projects/approval_maps/symbol_setter.py'),
                      'domain_v_used')]},
        loc('../../../../../../maverick_scripts/projects/ev/scripts/create_polygons.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../maverick_scripts/projects/ev/scripts/create_polygons.py'),
                      'createBollards')]},
        loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_export_everything.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_export_everything.py'),
                      'aprx')]},
        loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_fetch_datase_better_v2.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_fetch_datase_better_v2.py'),
                      'aprx')]},
        loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_ifc_bom.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_ifc_bom.py'),
                      'aerial')]},
        loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_preparelabeldata.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_preparelabeldata.py'),
                      'aprx')]},
        loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_template_v2_scripts/fpl_collect_features_v2.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_template_v2_scripts/fpl_collect_features_v2.py'),
                      'aprx')]},
        loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_template_v2_scripts/fpl_update_layouts_v2.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_template_v2_scripts/fpl_update_layouts_v2.py'),
                      'aprx')]},
        loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_updateCoverpage_v3.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../maverick_scripts/projects/fpl/scripts/fpl_updateCoverpage_v3.py'),
                      'aprx')]},
        loc('../../../../../../maverick_scripts/projects/shentel/scripts/shentel_bom.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../maverick_scripts/projects/shentel/scripts/shentel_bom.py'),
                      'aer_route')]},
        loc('../../../../../../maverick_scripts/projects/shentel/scripts/shentel_collect_features.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../maverick_scripts/projects/shentel/scripts/shentel_collect_features.py'),
                      'aoi_element')]},
        loc('../../../../../../maverick_scripts/projects/wraithtek/scripts/wraithtek_poles_collectorto3gis.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../maverick_scripts/projects/wraithtek/scripts/wraithtek_poles_collectorto3gis.py'),
                      'aprx')]},
        loc('../../../../../../maverick_scripts/projects/wraithtek/scripts/wraithtek_splicematrix.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../maverick_scripts/projects/wraithtek/scripts/wraithtek_splicematrix.py'),
                      'address')]},
        loc('../../../../../../maverick_scripts/projects/yvea/scripts/01_yvea_collectfeatures.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../maverick_scripts/projects/yvea/scripts/01_yvea_collectfeatures.py'),
                      'aprx')]},
        loc('../../../../../../maverick_scripts/projects/yvea/scripts/10_yvea_ifc_bom.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../maverick_scripts/projects/yvea/scripts/10_yvea_ifc_bom.py'),
                      'aerial')]},
        loc('../../../../../../maverick_scripts/projects/yvea/scripts/11_yvea_bom_to_excel.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../../maverick_scripts/projects/yvea/scripts/11_yvea_bom_to_excel.py'),
                      'aprx')]},
        loc('../../../../../../testing/decorat_arcpy_class.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../../testing/decorat_arcpy_class.py'),
                      'afeature')]},
        loc('../../../../../../testing/decorated.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../../testing/decorated.py'),
                      'my_decorator')]},
        loc('../../../../AppData/Roaming/Python/Python37/site-packages/psycopg2/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../AppData/Roaming/Python/Python37/site-packages/psycopg2/__init__.py'),
                      'connect')]},
        loc('../../../../AppData/Roaming/Python/Python39/site-packages/psycopg2/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../AppData/Roaming/Python/Python39/site-packages/psycopg2/__init__.py'),
                      'connect')]},
        loc('../../../../Downloads/CIM_Examples_Pro25_v1/Scripts/LayerSymbology/Layer_ProportionalSymbols.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Downloads/CIM_Examples_Pro25_v1/Scripts/LayerSymbology/Layer_ProportionalSymbols.py'),
                      'brk')]},
        loc('../../../../Downloads/CIM_Examples_Pro25_v1/Scripts/LayerSymbology/Layer_ReverseUniqueValueGroupSymbols.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Downloads/CIM_Examples_Pro25_v1/Scripts/LayerSymbology/Layer_ReverseUniqueValueGroupSymbols.py'),
                      'grp')]},
        loc('../../../../Downloads/CIM_Examples_Pro25_v1/Scripts/LayersAndTables/Layer_DisplayProperties.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Downloads/CIM_Examples_Pro25_v1/Scripts/LayersAndTables/Layer_DisplayProperties.py'),
                      'l')]},
        loc('../../../../Downloads/CIM_Examples_Pro25_v1/Scripts/LayersAndTables/Table_FieldVisibilityAndFormatting.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Downloads/CIM_Examples_Pro25_v1/Scripts/LayersAndTables/Table_FieldVisibilityAndFormatting.py'),
                      'f')]},
        loc('../../../../Downloads/exercise_1213.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Downloads/exercise_1213.py'),
                      'extra')]},
        loc('../../../../Downloads/fpl_redline_webmap.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Downloads/fpl_redline_webmap.py'),
                      'approval_name')]},
        loc('../../../../Downloads/joe exercise.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Downloads/joe exercise.py'),
                      'item')]},
        loc('../../../../Downloads/scotterill_qaqcScripts/FPL/calculate_fiber_length_20210211.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Downloads/scotterill_qaqcScripts/FPL/calculate_fiber_length_20210211.py'),
                      'aprx')]},
        loc('../../../../OneDrive - Maverick Construction/Desktop/FPL_anno_rotate_2.0.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Desktop/FPL_anno_rotate_2.0.py'),
                      'annotations')]},
        loc('../../../../OneDrive - Maverick Construction/Desktop/describetest.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/dominion/Dominion_reporting/dominion_report.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/dominion/Dominion_reporting/dominion_report.py'),
                      'dict_setup')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/eversource/eversource_pole_reporting_r3/eversource/eversource_pole_reporting_r3.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/eversource/eversource_pole_reporting_r3/eversource/eversource_pole_reporting_r3.py'),
                      'aprx')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/eversource/script archive/eversource_pole_reporting.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/eversource/script archive/eversource_pole_reporting.py'),
                      'aprx')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/redline_webmaps/fpl_redline_webmap.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/redline_webmaps/fpl_redline_webmap.py'),
                      'contractorview_item')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/redline_webmaps/versions/fpl_redline_webmap.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/redline_webmaps/versions/fpl_redline_webmap.py'),
                      'approval_name')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/redline_webmaps/versions/fpl_redline_webmap_1_20_tool.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/redline_webmaps/versions/fpl_redline_webmap_1_20_tool.py'),
                      'approval_name')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/addfield_11292022/fpl_adddomain_tosans_fs_domains_addfield_10102022.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/addfield_11292022/fpl_adddomain_tosans_fs_domains_addfield_10102022.py'),
                      'executionTime')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/addfield_11292022/fpl_redline_updateWebmap_newfieldsVisible_10132022.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/addfield_11292022/fpl_redline_updateWebmap_newfieldsVisible_10132022.py'),
                      'ct')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/addfield_11292022/viewupdate_new fields_10112022.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/addfield_11292022/viewupdate_new fields_10112022.py'),
                      'check')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/fpl_adddomain_tosans_fs_domains_addfield_10102022.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/fpl_adddomain_tosans_fs_domains_addfield_10102022.py'),
                      'executionTime')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/fpl_redline_updateWebmap_newfieldsVisible_10132022.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/fpl_redline_updateWebmap_newfieldsVisible_10132022.py'),
                      'ct')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/fpl_sd_backup.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/fpl_sd_backup.py'),
                      'download_sd')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/fpl_updating_fs_domains.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/fpl_updating_fs_domains.py'),
                      'changes')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/viewupdate_new fields_10112022.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/viewupdate_new fields_10112022.py'),
                      'check')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/wm_backup_10132022.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/fpl/scripts/update_fs_domains/wm_backup_10132022.py'),
                      'ct')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/nearmaps/pyarchive/WORKS_pre_script tool/get_nearmaps_imagery.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/nearmaps/pyarchive/WORKS_pre_script tool/get_nearmaps_imagery.py'),
                      'cell')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/shentel/scripts/bom/shentel_bom.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/shentel/scripts/bom/shentel_bom.py'),
                      'aer_route')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/shentel/scripts/find_footage_problems.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/shentel/scripts/find_footage_problems.py'),
                      'aoi')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/shentel/scripts/qc/current production/shentel_qc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/shentel/scripts/qc/current production/shentel_qc.py'),
                      'aprx')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/shentel/scripts/qc/shentel_qc/shentel_qc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/shentel/scripts/qc/shentel_qc/shentel_qc.py'),
                      'aprx')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/shentel/scripts/qc/shentel_qc1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../OneDrive - Maverick Construction/Documents/data/shentel/scripts/qc/shentel_qc1.py'),
                      'autopop')]},
        loc('../../../../OneDrive - Maverick Construction/Documents/data/shentel/scripts/qc/shentel_qc_07112022.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../OneDrive - Maverick Construction/Documents/innovation_approvalmaps/clone_service_item.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../OneDrive - Maverick Construction/Documents/innovation_approvalmaps/clone_service_item.py'),
                      'deep_copy_content')]},
        loc('../../../../OneDrive - Maverick Construction/eversource/eversource_pole_reporting_r4/eversource/eversource_pole_reporting.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/eversource/eversource_pole_reporting_r4/eversource/eversource_pole_reporting.py'),
                      'aprx')]},
        loc('../../../../OneDrive - Maverick Construction/eversource/eversource_pole_reporting_r4_2/eversource/eversource_pole_reporting.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../OneDrive - Maverick Construction/eversource/eversource_pole_reporting_r4_2/eversource/eversource_pole_reporting.py'),
                      'aprx')]},
        loc('../../../Django-Contractor-Reporting-main (1)/Django-Contractor-Reporting-main/contractorreporting/apps.py'): {'expanded-nodes': [[('class def',
        loc('../../../Django-Contractor-Reporting-main (1)/Django-Contractor-Reporting-main/contractorreporting/apps.py'),
        'ContractorreportingConfig')]],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Django-Contractor-Reporting-main (1)/Django-Contractor-Reporting-main/contractorreporting/apps.py'),
                      'ContractorreportingConfig')]},
        loc('../../../Python Scripts/requeststest.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Python Scripts/requeststest.py'),
                      'a')]},
        loc('../../../app_builder/arcgis-web-appbuilder-2.26 (1)/ArcGISWebAppBuilder/client/stemapp/widgets/ChangeWebMap/Widget.html'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../app_builder/arcgis-web-appbuilder-2.26 (1)/ArcGISWebAppBuilder/client/stemapp/widgets/ChangeWebMap/Widget.js'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../app_builder/arcgis-web-appbuilder-2.26 (1)/ArcGISWebAppBuilder/client/stemapp/widgets/ClipSummarize/Widget.js'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../app_builder/arcgis-web-appbuilder-2.26 (1)/ArcGISWebAppBuilder/client/stemapp/widgets/SmartEditor/ValuePicker.js'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../app_builder/arcgis-web-appbuilder-2.26 (1)/ArcGISWebAppBuilder/client/stemapp/widgets/samplewidgets/DataSourceConsumer/Widget.js'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../data1/ev/EV_template_v2.0/ev_export.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../data1/ev/EV_template_v2.0/ev_export.py'),
                      'main')]},
        loc('../../../innovation_approvalmaps/approvaltesting/maverick_collectfeatures.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../innovation_approvalmaps/approvaltesting/maverick_collectfeatures1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../innovation_approvalmaps/approvaltesting/maverick_collectfeatures1.py'),
                      'get_features')]},
        loc('../../../innovation_approvalmaps/approvaltesting/maverick_collectfeatures_12222022_213.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../innovation_approvalmaps/approvaltesting/maverick_collectfeatures_12222022_213.py'),
                      'get_features')]},
        loc('../../../innovation_approvalmaps/approvaltesting/maverick_collectfeatures_ide.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../innovation_approvalmaps/approvaltesting/maverick_collectfeatures_ide.py'),
                      'get_features')]},
        loc('../../../innovation_approvalmaps/approvaltesting/old_py/maverick_collectfeatures_12222022_213.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../innovation_approvalmaps/approvaltesting/old_py/maverick_collectfeatures_12222022_213.py'),
                      'get_features')]},
        loc('../../../innovation_approvalmaps/approvaltesting/symbol_setter.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../innovation_approvalmaps/approvaltesting/symbol_setter.py'),
                      'domain_v_used')]},
        loc('../../../innovation_approvalmaps/approvaltesting/test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../innovation_approvalmaps/approvaltesting_cimtesting/approval_pop.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../innovation_approvalmaps/approvaltesting_cimtesting/approval_pop.py'),
                      'getindex')]},
        loc('../../../innovation_approvalmaps/approvaltesting_cimtesting/approval_pop1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../innovation_approvalmaps/clone_service_item.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../innovation_approvalmaps/clone_service_item.py'),
                      'deep_copy_content')]},
        loc('../../../innovation_katapault/nodes_to_poles.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../innovation_katapault/nodes_to_poles.py'),
                      'create_poles')]},
        loc('../../../innovation_katapault/nodes_to_poles_obj.py'): {'expanded-nodes': [[('function def',
        loc('../../../innovation_katapault/nodes_to_poles_obj.py'),
        'create_poles')],
        [('class def',
          loc('../../../innovation_katapault/nodes_to_poles_obj.py'),
          'pole_obj')]],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../innovation_katapault/nodes_to_poles_obj.py'),
                      'create_poles')]},
        loc('../../../innovation_katapault/req_test2.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../innovation_katapault/req_test2.py'),
                      'headers')]},
        loc('../../../innovation_mapbox/mapbox_api_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../innovation_mapbox/mapbox_api_test.py'),
                      'r')]},
        loc('../../../liquibase-project/db_audit_toexcel.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../liquibase-project/db_audit_toexcel.py'),
                      'change_set_dict')]},
        loc('../../../liquibase-project/gdb_items_audit.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../liquibase-project/gdb_items_audit.py'),
                      'conjunction_function')]},
        loc('../../../liquibase-project/gdb_items_audit_comp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../liquibase-project/gdb_items_audit_comp.py'),
                      'domain_audit')]},
        loc('../../../liquibase-project/gdb_items_audit_main.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../liquibase-project/gdb_items_audit_main.py'),
                      'conjunction_function')]},
        loc('../../../liquibase-project2/gdb_items_audit.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../liquibase-project2/gdb_items_audit.py'),
                      'db_item')]},
        loc('../../../liquibase-projects/db_audit_toexcel.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../liquibase-projects/db_audit_toexcel.py'),
                      'change_set_dict')]},
        loc('../../../liquibase-projects/gdb_items_audit.py'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../../liquibase-projects/gdb_items_audit_comp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../liquibase-projects/gdb_items_audit_comp.py'),
                      'domain_audit')]},
        loc('../../../liquibase-projects/github copies/db_audit_toexcel.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../liquibase-projects/github copies/db_audit_toexcel.py'),
                      'change_set_dict')]},
        loc('../../../liquibase-projects/github copies/gdb_items_audit.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../liquibase-projects/github copies/gdb_items_audit.py'),
                      'db_item')]},
        loc('../../../liquibase-projects/github copies/gdb_items_audit_comp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../liquibase-projects/github copies/gdb_items_audit_comp.py'),
                      'domain_audit')]},
        loc('../../../liquibase-projects/jsontesting.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../liquibase-projects/jsontesting.py'),
                      'change_set_dict')]},
        loc('../../../liquibase-projects/testing.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../liquibase-projects/testing.py'),
                      'db_item')]},
        loc('Data/ctabus.csv'): {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': None},
        loc('Data/portfolio1.dat'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': None},
        loc('Data/portfolio3.dat'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': None},
        loc('Exercises/README.md'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': None},
        loc('Exercises/ex1_1.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('Exercises/ex1_2.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('Exercises/ex1_3.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('Exercises/ex1_4.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('Exercises/ex1_5.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('Exercises/ex1_6.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('Exercises/ex2_1.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('Exercises/ex2_2.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('Exercises/ex2_3.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('Exercises/ex2_4.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('Exercises/index.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('Exercises/soln2_1.md'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('Exercises/soln2_2.md'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('Exercises/soln2_5.md'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('Solutions/1_1/art.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('Solutions/1_1/art.py'),
        'chars')]},
        loc('Solutions/1_3/pcost.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('Solutions/1_3/pcost.py'),
                      'f')]},
        loc('art.py'): {'expanded-nodes': [],
                        'selected-nodes': [],
                        'top-node': [('generic attribute',
                                      loc('art.py'),
                                      'chars')]},
        loc('bus_route_analysis.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('bus_route_analysis.py'),
        'best_10yr_route')]},
        loc('ex1_1.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': None},
        loc('iter1.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('class def',
        loc('iter1.py'),
        'MutInt')]},
        loc('my_primitive_type.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('class def',
        loc('my_primitive_type.py'),
        'MutInt')]},
        loc('pcost.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('pcost.py'),
        'filepath')]},
        loc('readport.py'): {'expanded-nodes': [[('function def',
        loc('readport.py'),
        'read_portfolio')]],
                             'selected-nodes': [[('generic attribute',
        loc('readport.py'),
        'portfolio')]],
                             'top-node': [('generic attribute',
        loc('readport.py'),
        'byname')]},
        loc('readrides.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('readrides.py'),
        'f')]},
        loc('stock.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('stock.py'),
        's')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #2'),
        'url')]},
        loc('unknown:<untitled> #10'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #11'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('unknown:<untitled> #12'),
                      'main')]},
        loc('unknown:<untitled> #13'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('unknown:<untitled> #14'),
                      'added_lyr')]},
        loc('unknown:<untitled> #15'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #16'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('unknown:<untitled> #17'),
                      'added_lyr')]},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('unknown:<untitled> #4'),
        'domain_audit')]},
        loc('unknown:<untitled> #5'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #6'),
        'added_lyr')]},
        loc('unknown:<untitled> #7'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('unknown:<untitled> #8'),
        'deep_copy_content')]},
        loc('unknown:<untitled> #9'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        'c': [],
        'django': [],
        'html': [],
        'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          3],
        'notebook_display': 'normal',
        'notebook_percent': 0.37057522123893805,
        'override_title': None,
        'pagelist': [('debug-io',
                      'wide',
                      0,
                      {}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'cyp',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'memory',
                                       'fReverse': False,
                                       'fSearchText': 'setat',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': '',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 3,
                       'folded-linenos': [],
                       'history': {'file:c:/Users/jtrebilcock/Documents/learn/python scratch/python-mastery/mangle.py': ['a.__count\n',
        'a.get_count()\n',
        'vars(a)\n',
        'b.set_count=1000\n',
        'b=A()\n',
        'b.set_count(1000)\n',
        'b=A()\nb.set_count(1000)\n\n',
        'b.whatever\n',
        'vars(b)\n',
        'b.__dict__\n',
        'a.__dict__\n']},
                       'launch-id': None,
                       'sel-line': 17,
                       'sel-line-start': 242,
                       'selection_end': 242,
                       'selection_start': 242,
                       'zoom': 0}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 45,
                       'folded-linenos': [],
                       'history': {None: ['class Stock:\n\tdef__init__(self, name, shares, price):\n\t\tself.name = name\n\t\tself.shares = shares\n\t\tself.price = price\n\n',
        'class Stock:\n\tdef __init__(self, name, shares, price):\n\t\tself.name = name\n\t\tself.shares = shares\n\t\tself.price = price\n\n',
        "class Stock:\n\tdef __init__(self, name = 'whatever', shares=0, price=.1):\n\t\tself.name = name\n\t\tself.shares = shares\n\t\tself.price = price\n\n",
        'a= Stock()\n',
        "class Stock:\n\t__slots__ = ('name', 'shares', 'price')\n\tdef __init__(self, name = 'whatever', shares=0, price=.1):\n\t\tself.name = name\n\t\tself.shares = shares\n\t\tself.price = price\n\n",
        "s = stock.Stock('GOOG',100,490.10)\n\n",
        's.name\n',
        's.shares\n',
        's._types\n',
        's.price\n',
        's._price\n',
        's.whatever =5\n',
        'vars(object=...)\n',
        'vars()\n',
        "a = 'gsbgsbgs'\n",
        's\n',
        'vars(s)\n',
        'help(vars)\n',
        's.__dict__\n',
        "import stock\ns = stock.Stock('GOOG',100,490.10)\n\n",
        "import stock\nf = stock.Stock('GOOG',-1,490.10)\n\n",
        "import stock\nf = stock.Stock('GOOG',22,-490.10)\n\n",
        "f.fuck='fuck'\n\n",
        "f = stock.Stock('GOOG',22,-490.10)\n\n\n",
        "f.fuck='fuck'\n",
        'class MyStock(Stock):\n\tdef cost(self):\n\t\treturn 1.25 * self.shares * self.price\n\n',
        'class MyStock(stock.Stock):\n\tdef cost(self):\n\t\treturn 1.25 * self.shares * self.price\n\n',
        'class MyStock(stock.Stock):\n\t@property\n\tdef cost(self):\n\t\treturn 1.25 * self.shares * self.price\n\n',
        'class MyStock(Stock):\n\tdef cost(self):\n\t\tactual_cost = super().cost()\n\t\treturn 1.25 * actual_cost\n\n\n',
        "s = MyStock('GOOG', 100, 490.1)\n",
        's.cost\n',
        's.cost()\n',
        'import stock\n\n',
        "import stock\nf = stock.Stock('GOOG',22,-490.10)\nf.fuck='fuck'\n\n",
        'f\n',
        "import stock\nf = stock.Stock('GOOG',22,490.10)\n\n\n",
        "f = stock.Stock('GOOG',22,490.10)\n",
        "import stock\nf = stock.Stock('GOOG',22,490.10)\n\n",
        'class MyStock(stock.Stock):\n\tdef cost(self):\n\t\tactual_cost = super().cost()\n\t\treturn 1.25 * actual_cost\n\n',
        "f = MyStock('GOOG',22,490.10)\n",
        'f.cost\n',
        'f.cost()\n',
        'isinstance(f, stock)\n',
        'isinstance(f, stock.Stock)\n',
        'formatter = tableformat.TextTableFormatter()\n',
        "import stock, reader, tableformat\nportfolio = reader.read_csv_as_instances('Data/portfolio.csv', stock.Stock)\nformatter = tableformat.TextTableFormatter()\n\n",
        "print('whatever', end = ' ')\n",
        "print('whatever', end = '2')\n",
        "import stock, reader, tableformat\nportfolio = reader.read_csv_as_instances('Data/portfolio.csv', stock.Stock)\nformatter = tableformat.HTMLTableFormatter()\n\n",
        "tableformat.print_table(portfolio, ['name','shares','price'], formatter)\n",
        "formatter = create_formatter('html')\n",
        "formatter = tableformat.create_formatter('html')\n",
        'git add .\n',
        'import stock, reader, tableformat\n',
        "formatter = tableformat.create_formatter('html',portfolio,['name','shares','price'])\n",
        "formatter = tableformat.create_formatter('csv',portfolio,['name','shares','price'])\n",
        "formatter = tableformat.create_formatter('text',portfolio,['name','shares','price'])\n",
        'help(repr)\n',
        "a='a'\n",
        "a='abcdfuck'\n",
        'repr(a)\n',
        'from datetime import date\nd = date(2008, 7, 5)\n\n',
        'print(d)  \n',
        'datetime.date(2008, 7, 5)\n',
        'date(2008, 7, 5)\n',
        "print('The date is', repr(d))\n",
        'import stock\n',
        'goog\n',
        'print(goog)\n',
        "'Stock(GOOG, 100, 490.1)'\n",
        "goog = Stock('GOOG', 100, 490.10)\n",
        'repr(goog)\n',
        'portfolio\n',
        'for f in portfolio:\n\tprint(f)\n\n',
        'for f in portfolio:\n\trepr(f)\n\n',
        'for f in portfolio:\n\tprint(repr(f))\n\n',
        'repr(portfolio[0])\n',
        'print(portfolio[0])\n',
        'a=portfolio[0]\n',
        'a[0]\n',
        'vars(a)\n',
        "import stock, reader\nportfolio = reader.read_csv_as_instances('Data/portfolio.csv', stock.Stock)\n\n",
        'from stock import Stock\n',
        "a = Stock('GOOG', 100, 490.1)\nb = Stock('GOOG', 100, 490.1)\n\n",
        "from stock import Stock\na = Stock('GOOG', 100, 490.1)\nb = Stock('GOOG', 100, 490.1)\n\n",
        'a==b\n',
        'a.price\n',
        'a._price\n',
        'a._price=555\n',
        'a.price=1.50\n',
        'a\n',
        'a.price=-1\n',
        'class redirect_stdout:\n        def __init__(self, out_file):\n            self.out_file = out_file\n        def __enter__(self):\n            self.stdout = sys.stdout\n            sys.stdout = self.out_file\n            return self.out_file\n        def __exit__(self, ty, val, tb):\n            sys.stdout = self.stdout\n\n',
        'class redirect_stdout:\n\t\tdef __init__(self, out_file):\n\t\t\tself.out_file = out_file\n\t\tdef __enter__(self):\n\t\t\tself.stdout = sys.stdout\n\t\t\tsys.stdout = self.out_file\n\t\t\treturn self.out_file\n\t\tdef __exit__(self, ty, val, tb):\n\t\t\tsys.stdout = self.stdout\n\n',
        "from tableformat import create_formatter\nformatter = create_formatter('text')\n\n",
        'import sys\n',
        'import tableformat\n',
        'import stock, reader\n',
        "portfolio = reader.read_csv_as_instances('Data/portfolio.csv', stock.Stock)\n",
        "with redirect_stdout(open('out.txt', 'w')) as file:\n\t\ttableformat.print_table(portfolio, ['name','shares','price'], formatter)\n\t\tfile.close()\n\n"]},
                       'launch-id': None,
                       'sel-line': 61,
                       'sel-line-start': 1954,
                       'selection_end': 1954,
                       'selection_start': 1954,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('bookmarks',
                      'wide',
                      1,
                      {'filter-text': ''}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''}),
                     ('packages',
                      'wide',
                      1,
                      {'show-console': False,
                       'tree-percent': 0.25})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.5,
        ({'bookmarks': ([[loc('Exercises/ex3_3.md'),
                          {'attrib-starts': [],
                           'code-line': 'Change the `read_portfolio()` function to use the new `Stock.from_row()`\r\n',
                           'first-line': 203,
                           'folded-linenos': [],
                           'sel-line': 129,
                           'sel-line-start': 3261,
                           'selection_end': 3304,
                           'selection_start': 3304,
                           'zoom': 0},
                          1690391136.1313565],
                         [loc('Exercises/ex3_5.md'),
                          {'attrib-starts': [],
                           'code-line': '**Discussion**\r\n',
                           'first-line': 168,
                           'folded-linenos': [],
                           'sel-line': 179,
                           'sel-line-start': 6192,
                           'selection_end': 6206,
                           'selection_start': 6206,
                           'zoom': 0},
                          1690391136.9575346],
                         [loc('stock.py'),
                          {'attrib-starts': [('Stock|0|',
        2),
        ('Stock|0|.from_row|0|',
         19)],
                           'code-line': '\t\treturn cls(*values)\t\t\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 21,
                           'sel-line-start': 431,
                           'selection_end': 454,
                           'selection_start': 454,
                           'zoom': 0},
                          1690391140.0532832],
                         [loc('Exercises/soln3_6.md'),
                          {'attrib-starts': [],
                           'code-line': '# Exercise 3.6 - Solution\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1690391612.6971824],
                         [loc('mangle.py'),
                          {'attrib-starts': [],
                           'code-line': 'print(a.__count)',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 22,
                           'sel-line-start': 272,
                           'selection_end': 288,
                           'selection_start': 288,
                           'zoom': 0},
                          1690397003.2483041],
                         [loc('Exercises/ex3_6.md'),
                          {'attrib-starts': [],
                           'code-line': '\\[ [Index](index.md) | [Exercise 3.5](ex3_5.md) | [Exercise 3.7](ex3_7.md) \\]\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1690397005.4729156],
                         [loc('Exercises/soln3_6.md'),
                          {'attrib-starts': [],
                           'code-line': '# Exercise 3.6 - Solution\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1690397006.4999473],
                         [loc('Exercises/ex3_6.md'),
                          {'attrib-starts': [],
                           'code-line': ">>> goog = Stock('GOOG', 100, 490.10)\r\n",
                           'first-line': 42,
                           'folded-linenos': [],
                           'sel-line': 55,
                           'sel-line-start': 1605,
                           'selection_end': 1642,
                           'selection_start': 1609,
                           'zoom': 0},
                          1690397634.6822133],
                         [loc('Exercises/soln3_6.md'),
                          {'attrib-starts': [],
                           'code-line': '\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 3,
                           'sel-line-start': 72,
                           'selection_end': 72,
                           'selection_start': 72,
                           'zoom': 0},
                          1690397684.9137697],
                         [loc('Exercises/ex3_6.md'),
                          {'attrib-starts': [],
                           'code-line': '>>> portfolio\r\n',
                           'first-line': 54,
                           'folded-linenos': [],
                           'sel-line': 67,
                           'sel-line-start': 1945,
                           'selection_end': 1958,
                           'selection_start': 1949,
                           'zoom': 0},
                          1690398564.4998446],
                         [loc('Exercises/ex3_6.md'),
                          {'attrib-starts': [],
                           'code-line': '>>> from tableformat import create_formatter\r\n',
                           'first-line': 123,
                           'folded-linenos': [],
                           'sel-line': 145,
                           'sel-line-start': 4351,
                           'selection_end': 4437,
                           'selection_start': 4351,
                           'zoom': 0},
                          1690399711.513556],
                         [loc('Exercises/soln3_5.md'),
                          {'attrib-starts': [],
                           'code-line': '    else:\r\n',
                           'first-line': 24,
                           'folded-linenos': [],
                           'sel-line': 53,
                           'sel-line-start': 1490,
                           'selection_end': 1583,
                           'selection_start': 1494,
                           'zoom': 0},
                          1690399832.0671792],
                         [loc('Exercises/ex3_6.md'),
                          {'attrib-starts': [],
                           'code-line': "        tableformat.print_table(portfolio, ['name','shares','price', formatter)\r\n",
                           'first-line': 123,
                           'folded-linenos': [],
                           'sel-line': 148,
                           'sel-line-start': 4496,
                           'selection_end': 4537,
                           'selection_start': 4528,
                           'zoom': 0},
                          1690400081.6394327],
                         [loc('Exercises/ex3_6.md'),
                          {'attrib-starts': [],
                           'code-line': '>>> import stock, reader\r\n',
                           'first-line': 42,
                           'folded-linenos': [],
                           'sel-line': 65,
                           'sel-line-start': 1838,
                           'selection_end': 1862,
                           'selection_start': 1842,
                           'zoom': 0},
                          1690400117.23753],
                         [loc('out.txt'),
                          {'attrib-starts': [],
                           'code-line': 'name       shares     price     \r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1690400123.8262243],
                         [loc('Exercises/soln3_5.md'),
                          {'attrib-starts': [],
                           'code-line': 'class HTMLTableFormatter(TableFormatter):\r\n',
                           'first-line': 24,
                           'folded-linenos': [],
                           'sel-line': 33,
                           'sel-line-start': 885,
                           'selection_end': 917,
                           'selection_start': 917,
                           'zoom': 0},
                          1690400134.2772977],
                         [loc('out.txt'),
                          {'attrib-starts': [],
                           'code-line': 'name       shares     price     \r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1690400136.2210803],
                         [loc('Exercises/ex3_6.md'),
                          {'attrib-starts': [],
                           'code-line': " Stock('GE', 95, 40.37), Stock('MSFT', 50, 65.1), Stock('IBM', 100, 70.44)]\r\n",
                           'first-line': 42,
                           'folded-linenos': [],
                           'sel-line': 69,
                           'sel-line-start': 2064,
                           'selection_end': 2139,
                           'selection_start': 2139,
                           'zoom': 0},
                          1690400146.9107468],
                         [loc('Exercises/ex3_6.md'),
                          {'attrib-starts': [],
                           'code-line': '      name     shares      price\r\n',
                           'first-line': 108,
                           'folded-linenos': [],
                           'sel-line': 153,
                           'sel-line-start': 4661,
                           'selection_end': 4693,
                           'selection_start': 4693,
                           'zoom': 0},
                          1690400261.6839283],
                         [loc('Exercises/ex3_7.md'),
                          {'attrib-starts': [],
                           'code-line': '\\[ [Index](index.md) | [Exercise 3.6](ex3_6.md) | [Exercise 3.8](ex3_8.md) \\]\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1690400261.6973324]],
                        20),
          'current-loc': loc('Exercises/ex3_7.md'),
          'editor-state-list': [(loc('Data/portfolio1.dat'),
                                 {'attrib-starts': [],
                                  'code-line': '',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 7,
                                  'sel-line-start': 102,
                                  'selection_end': 102,
                                  'selection_start': 102,
                                  'zoom': 0}),
                                (loc('art.py'),
                                 {'attrib-starts': [],
                                  'code-line': "if __name__ == '__main__':\r\n",
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 11,
                                  'sel-line-start': 174,
                                  'selection_end': 342,
                                  'selection_start': 174,
                                  'zoom': 0}),
                                (loc('stock.py'),
                                 {'attrib-starts': [('Stock|0|',
        2),
        ('Stock|0|.from_row|0|',
         23)],
                                  'code-line': '\t\treturn cls(*values)\t\t\r\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 25,
                                  'sel-line-start': 646,
                                  'selection_end': 669,
                                  'selection_start': 669,
                                  'zoom': 0}),
                                (loc('readport.py'),
                                 {'attrib-starts': [],
                                  'code-line': "byname['IBM']",
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 26,
                                  'sel-line-start': 576,
                                  'selection_end': 589,
                                  'selection_start': 589,
                                  'zoom': 0}),
                                (loc('mangle.py'),
                                 {'attrib-starts': [],
                                  'code-line': 'print(a.__count)',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 22,
                                  'sel-line-start': 272,
                                  'selection_end': 288,
                                  'selection_start': 288,
                                  'zoom': 0}),
                                (loc('Exercises/ex3_6.md'),
                                 {'attrib-starts': [],
                                  'code-line': '      name     shares      price\r\n',
                                  'first-line': 108,
                                  'folded-linenos': [],
                                  'sel-line': 153,
                                  'sel-line-start': 4661,
                                  'selection_end': 4693,
                                  'selection_start': 4693,
                                  'zoom': 0}),
                                (loc('Exercises/ex3_7.md'),
                                 {'attrib-starts': [],
                                  'code-line': '\\[ [Index](index.md) | [Exercise 3.6](ex3_6.md) | [Exercise 3.8](ex3_8.md) \\]\r\n',
                                  'first-line': 6,
                                  'folded-linenos': [],
                                  'sel-line': 0,
                                  'sel-line-start': 0,
                                  'selection_end': 0,
                                  'selection_start': 0,
                                  'zoom': 0}),
                                (loc('out.txt'),
                                 {'attrib-starts': [],
                                  'code-line': 'name       shares     price     \r\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 0,
                                  'sel-line-start': 0,
                                  'selection_end': 0,
                                  'selection_start': 0,
                                  'zoom': 0})],
          'has-focus': False,
          'locked': False},
         [loc('Data/portfolio1.dat'),
          loc('art.py'),
          loc('stock.py'),
          loc('readport.py'),
          loc('mangle.py'),
          loc('Exercises/ex3_6.md'),
          loc('Exercises/ex3_7.md'),
          loc('out.txt')]),
        ({'bookmarks': ([[loc('tableformat.py'),
                          {'attrib-starts': [('create_formatter|0|',
        43)],
                           'code-line': '\t\t',
                           'first-line': 29,
                           'folded-linenos': [],
                           'sel-line': 50,
                           'sel-line-start': 1422,
                           'selection_end': 1424,
                           'selection_start': 1424,
                           'zoom': 0},
                          1690388710.3277411],
                         [loc('Exercises/soln3_5.md'),
                          {'attrib-starts': [],
                           'code-line': 'class CSVTableFormatter(TableFormatter):\r\n',
                           'first-line': 18,
                           'folded-linenos': [],
                           'sel-line': 26,
                           'sel-line-start': 692,
                           'selection_end': 881,
                           'selection_start': 692,
                           'zoom': 0},
                          1690388731.5646148],
                         [loc('tableformat.py'),
                          {'attrib-starts': [('create_formatter|0|',
        50)],
                           'code-line': '\t\r\n',
                           'first-line': 26,
                           'folded-linenos': [],
                           'sel-line': 55,
                           'sel-line-start': 1593,
                           'selection_end': 1594,
                           'selection_start': 1594,
                           'zoom': 0},
                          1690388754.7382596],
                         [loc('tableformat.py'),
                          {'attrib-starts': [('TextTableFormatter|0|',
        12)],
                           'code-line': '\tdef headings(self, headers):\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 13,
                           'sel-line-start': 322,
                           'selection_end': 351,
                           'selection_start': 351,
                           'zoom': 0},
                          1690389411.6277354],
                         [loc('Exercises/soln3_5.md'),
                          {'attrib-starts': [],
                           'code-line': 'class CSVTableFormatter(TableFormatter):\r\n',
                           'first-line': 18,
                           'folded-linenos': [],
                           'sel-line': 26,
                           'sel-line-start': 692,
                           'selection_end': 881,
                           'selection_start': 692,
                           'zoom': 0},
                          1690389413.1504307],
                         [loc('tableformat.py'),
                          {'attrib-starts': [],
                           'code-line': 'class CSVTableFormatter(TableFormatter):\r\n',
                           'first-line': 33,
                           'folded-linenos': [],
                           'sel-line': 33,
                           'sel-line-start': 878,
                           'selection_end': 916,
                           'selection_start': 916,
                           'zoom': 0},
                          1690397012.7285001],
                         [loc('stock.py'),
                          {'attrib-starts': [('Stock|0|',
        2),
        ('Stock|0|.__repr__|0|',
         14)],
                           'code-line': "\t\treturn f'{type(self).__name__}({self.name!r}, {self.shares!r}, {self.price!r})'\t\r\n",
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 16,
                           'sel-line-start': 341,
                           'selection_end': 372,
                           'selection_start': 372,
                           'zoom': 0},
                          1690398058.1638248],
                         [loc('Exercises/soln3_6.md'),
                          {'attrib-starts': [],
                           'code-line': '## (b) Making Objects Comparable\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 16,
                           'sel-line-start': 317,
                           'selection_end': 349,
                           'selection_start': 349,
                           'zoom': 0},
                          1690398091.959836],
                         [loc('stock.py'),
                          {'attrib-starts': [('Stock|0|',
        2),
        ('Stock|0|.__eq__|0|',
         56)],
                           'code-line': '\t\r\n',
                           'first-line': 6,
                           'folded-linenos': [],
                           'sel-line': 60,
                           'sel-line-start': 1655,
                           'selection_end': 1656,
                           'selection_start': 1656,
                           'zoom': 0},
                          1690399154.8335938],
                         [loc('Exercises/soln3_6.md'),
                          {'attrib-starts': [],
                           'code-line': '## (b) Making Objects Comparable\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 16,
                           'sel-line-start': 317,
                           'selection_end': 349,
                           'selection_start': 349,
                           'zoom': 0},
                          1690399168.893374],
                         [loc('stock.py'),
                          {'attrib-starts': [('Stock|0|',
        2),
        ('Stock|0|.__eq__|0|',
         56)],
                           'code-line': '\t\r\n',
                           'first-line': 6,
                           'folded-linenos': [],
                           'sel-line': 60,
                           'sel-line-start': 1655,
                           'selection_end': 1656,
                           'selection_start': 1656,
                           'zoom': 0},
                          1690399172.7286208],
                         [loc('Exercises/soln3_5.md'),
                          {'attrib-starts': [],
                           'code-line': 'class CSVTableFormatter(TableFormatter):\r\n',
                           'first-line': 30,
                           'folded-linenos': [],
                           'sel-line': 26,
                           'sel-line-start': 692,
                           'selection_end': 881,
                           'selection_start': 692,
                           'zoom': 0},
                          1690399182.4382393],
                         [loc('Exercises/soln3_4.md'),
                          {'attrib-starts': [],
                           'code-line': '        self.shares = shares\r\n',
                           'first-line': 153,
                           'folded-linenos': [],
                           'sel-line': 158,
                           'sel-line-start': 3652,
                           'selection_end': 3678,
                           'selection_start': 3678,
                           'zoom': 0},
                          1690399348.1487284],
                         [loc('Exercises/soln3_5.md'),
                          {'attrib-starts': [],
                           'code-line': 'class CSVTableFormatter(TableFormatter):\r\n',
                           'first-line': 30,
                           'folded-linenos': [],
                           'sel-line': 26,
                           'sel-line-start': 692,
                           'selection_end': 881,
                           'selection_start': 692,
                           'zoom': 0},
                          1690399349.0500042],
                         [loc('stock.py'),
                          {'attrib-starts': [('Stock|0|',
        2),
        ('Stock|0|.__eq__|0|',
         56)],
                           'code-line': '\t\r\n',
                           'first-line': 6,
                           'folded-linenos': [],
                           'sel-line': 60,
                           'sel-line-start': 1655,
                           'selection_end': 1656,
                           'selection_start': 1656,
                           'zoom': 0},
                          1690399543.0563219],
                         [loc('tableformat.py'),
                          {'attrib-starts': [('redirect_stdout|0|',
        40),
        ('redirect_stdout|0|.__enter__|0|',
         43)],
                           'code-line': '\t\tsys.stdout = self.out_file\r\n',
                           'first-line': 39,
                           'folded-linenos': [],
                           'sel-line': 45,
                           'sel-line-start': 1188,
                           'selection_end': 1216,
                           'selection_start': 1216,
                           'zoom': 0},
                          1690399732.8737204],
                         [loc('tableformat.py'),
                          {'attrib-starts': [('redirect_stdout|0|',
        40),
        ('redirect_stdout|0|.__enter__|0|',
         43)],
                           'code-line': '\t\tsys.stdout = self.out_file\r\n',
                           'first-line': 3,
                           'folded-linenos': [],
                           'sel-line': 45,
                           'sel-line-start': 1188,
                           'selection_end': 1216,
                           'selection_start': 1216,
                           'zoom': 0},
                          1690399755.977149],
                         [loc('tableformat.py'),
                          {'attrib-starts': [('create_formatter|0|',
        62)],
                           'code-line': '\t',
                           'first-line': 45,
                           'folded-linenos': [],
                           'sel-line': 73,
                           'sel-line-start': 2051,
                           'selection_end': 2052,
                           'selection_start': 2052,
                           'zoom': 0},
                          1690400218.737899],
                         [loc('Exercises/ex3_7.md'),
                          {'attrib-starts': [],
                           'code-line': '\\[ [Index](index.md) | [Exercise 3.6](ex3_6.md) | [Exercise 3.8](ex3_8.md) \\]\r\n',
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0,
                           'zoom': 0},
                          1690400261.1903136],
                         [loc('tableformat.py'),
                          {'attrib-starts': [('create_formatter|0|',
        62)],
                           'code-line': '\t',
                           'first-line': 18,
                           'folded-linenos': [],
                           'sel-line': 73,
                           'sel-line-start': 2051,
                           'selection_end': 2052,
                           'selection_start': 2052,
                           'zoom': 0},
                          1690400277.8246894]],
                        20),
          'current-loc': loc('stock.py'),
          'editor-state-list': [(loc('pcost.py'),
                                 {'attrib-starts': [],
                                  'code-line': "if __name__ == '__main__':\r\n",
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 19,
                                  'sel-line-start': 549,
                                  'selection_end': 646,
                                  'selection_start': 549,
                                  'zoom': 0}),
                                (loc('readrides.py'),
                                 {'attrib-starts': [('read_rides_as_columns|0|',
        98)],
                                  'code-line': '\t\trows = csv.reader(f)\r\n',
                                  'first-line': 89,
                                  'folded-linenos': [],
                                  'sel-line': 105,
                                  'sel-line-start': 2512,
                                  'selection_end': 2578,
                                  'selection_start': 2512,
                                  'zoom': 0}),
                                (loc('readport.py'),
                                 {'attrib-starts': [],
                                  'code-line': '# readport.py\r\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 0,
                                  'sel-line-start': 0,
                                  'selection_end': 0,
                                  'selection_start': 0,
                                  'zoom': 0}),
                                (loc('stock.py'),
                                 {'attrib-starts': [('Stock|0|',
        2),
        ('Stock|0|.__eq__|0|',
         56)],
                                  'code-line': '\t\r\n',
                                  'first-line': 33,
                                  'folded-linenos': [],
                                  'sel-line': 60,
                                  'sel-line-start': 1655,
                                  'selection_end': 1656,
                                  'selection_start': 1656,
                                  'zoom': 0}),
                                (loc('bus_route_analysis.py'),
                                 {'attrib-starts': [('main|0|',
        41)],
                                  'code-line': "\tride_data = read_rides_as_dicts('Data/ctabus.csv')\r\n",
                                  'first-line': 30,
                                  'folded-linenos': [],
                                  'sel-line': 43,
                                  'sel-line-start': 1377,
                                  'selection_end': 1409,
                                  'selection_start': 1390,
                                  'zoom': 0}),
                                (loc('my_primitive_type.py'),
                                 {'attrib-starts': [('MutInt|0|',
        5),
        ('MutInt|0|.__repr__|0|',
         20)],
                                  'code-line': "\t\treturn f'MutInt({self.value!r})'\r\n",
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 21,
                                  'sel-line-start': 481,
                                  'selection_end': 515,
                                  'selection_start': 515,
                                  'zoom': 0}),
                                (loc('newContainer_2_5.py'),
                                 {'attrib-starts': [('RideData|0|',
        4),
        ('RideData|0|.append|0|',
         21)],
                                  'code-line': "\t\tself.dates.append(d['date'])\r\n",
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 23,
                                  'sel-line-start': 563,
                                  'selection_end': 569,
                                  'selection_start': 569,
                                  'zoom': 0}),
                                (loc('Data/ctabus.csv'),
                                 {'attrib-starts': [],
                                  'code-line': '3,01/01/2001,U,7354\r\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 1,
                                  'sel-line-start': 26,
                                  'selection_end': 38,
                                  'selection_start': 28,
                                  'zoom': 0}),
                                (loc('Data/portfolio.csv'),
                                 {'attrib-starts': [],
                                  'code-line': 'name,shares,price\r\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 0,
                                  'sel-line-start': 0,
                                  'selection_end': 0,
                                  'selection_start': 0,
                                  'zoom': 0}),
                                (loc('reader.py'),
                                 {'attrib-starts': [],
                                  'code-line': 'def read_csv_as_instances(filename, cls):\r\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 15,
                                  'sel-line-start': 298,
                                  'selection_end': 323,
                                  'selection_start': 302,
                                  'zoom': 0}),
                                (loc('tableformat.py'),
                                 {'attrib-starts': [('create_formatter|0|',
        62)],
                                  'code-line': '\t',
                                  'first-line': 18,
                                  'folded-linenos': [],
                                  'sel-line': 73,
                                  'sel-line-start': 2051,
                                  'selection_end': 2052,
                                  'selection_start': 2052,
                                  'zoom': 0})],
          'has-focus': True,
          'locked': False},
         [loc('pcost.py'),
          loc('readrides.py'),
          loc('readport.py'),
          loc('stock.py'),
          loc('bus_route_analysis.py'),
          loc('my_primitive_type.py'),
          loc('newContainer_2_5.py'),
          loc('Data/ctabus.csv'),
          loc('Data/portfolio.csv'),
          loc('reader.py'),
          loc('tableformat.py')])),
                               'open_files': ['Data/ctabus.csv',
        'Data/portfolio.csv',
        'bus_route_analysis.py',
        'my_primitive_type.py',
        'newContainer_2_5.py',
        'pcost.py',
        'readport.py',
        'readrides.py',
        'reader.py',
        'tableformat.py',
        'stock.py',
        'Data/portfolio1.dat',
        'art.py',
        'readport.py',
        'stock.py',
        'mangle.py',
        'out.txt',
        'Exercises/ex3_6.md',
        'Exercises/ex3_7.md']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.41697147037307974},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           3),
                          1690393314.3909972),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5685840707964602},
                 'splits': 2,
                 'tab_location': 'right',
                 'traversal_pos': ((0,
                                    0),
                                   1690207650.4129894),
                 'user_data': {}},
        'window-alloc': (1142,
                         -32,
                         974,
                         558)}]}
guimgr.recent-documents = [loc('stock.py'),
                           loc('tableformat.py'),
                           loc('Exercises/ex3_7.md'),
                           loc('Exercises/ex3_6.md'),
                           loc('out.txt'),
                           loc('mangle.py'),
                           loc('reader.py'),
                           loc('readport.py'),
                           loc('Data/portfolio1.dat'),
                           loc('art.py')]
guimgr.visual-state = {loc('../../../../../../jt_scripts/quick csv reader/reader.py'): {'attrib-starts': [],
        'code-line': 'import csv\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../../../../../../maverick_scripts/projects/approval_maps/maverick_collectfeatures.py'): {'attrib-starts': [('make_aoi|0|',
        121)],
        'code-line': '\t#find the aoi layer from the feature service, need to regex name to get rid of prefix\r\n',
        'first-line': 114,
        'folded-linenos': [],
        'sel-line': 132,
        'sel-line-start': 5332,
        'selection_end': 5404,
        'selection_start': 5401,
        'zoom': 0},
                       loc('../../../../../../maverick_scripts/projects/wraithtek/scripts/wraithtek_splicematrix.py'): {'attrib-starts': [('reorder|0|',
        71)],
        'code-line': "\t\t\t\tfix = sorted(area_keys, key = lambda e: (re.search(pattern1, e.split('-')[1])[0], int(re.search(pattern2, e.split('-')[1])[0]),e.split('-')[2][0], int(e.split('-')[2][1:])))\t\n",
        'first-line': 66,
        'folded-linenos': [],
        'sel-line': 84,
        'sel-line-start': 3315,
        'selection_end': 3331,
        'selection_start': 3325,
        'zoom': 0},
                       loc('../../../../OneDrive - Maverick Construction/Documents/data/nearmaps/get_nearmaps_imagery.py'): {'attrib-starts': [],
        'code-line': "'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 337,
        'selection_end': 340,
        'selection_start': 340,
        'zoom': 0},
                       loc('../../../../OneDrive - Maverick Construction/eversource/eversource_pole_reporting_r4_2/eversource/eversource_pole_reporting.py'): {'attrib-starts': [('editingfeatures|0|',
        141)],
        'code-line': '    with arcpy.da.SearchCursor(clean_tbl, fields_needed) as sCur:           \r\n',
        'first-line': 135,
        'folded-linenos': [],
        'sel-line': 151,
        'sel-line-start': 8427,
        'selection_end': 8467,
        'selection_start': 8458,
        'zoom': 0},
                       loc('../../../liquibase-project/gdb_items_audit_main.py'): {'attrib-starts': [('main|0|',
        215)],
        'code-line': '\t#for the 2 dae calls, can just use change_set_dict as an argument for export_changeset\n',
        'first-line': 214,
        'folded-linenos': [],
        'sel-line': 230,
        'sel-line-start': 11402,
        'selection_end': 11489,
        'selection_start': 11486,
        'zoom': 0},
                       loc('Data/portfolio3.dat'): {'attrib-starts': [],
        'code-line': 'T 10 40.03\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 300,
        'selection_end': 310,
        'selection_start': 310,
        'zoom': 0},
                       loc('Exercises/README.md'): {'attrib-starts': [],
        'code-line': '- The [`Solutions/`](../Solutions/) folder contains complete solution code for\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 795,
        'selection_end': 866,
        'selection_start': 866,
        'zoom': 0},
                       loc('Exercises/ex1_1.md'): {'attrib-starts': [],
        'code-line': '\\[ [Solution](soln1_1.md) | [Index](index.md) | [Exercise 1.2](ex1_2.md) \\]\r\n',
        'first-line': 66,
        'folded-linenos': [],
        'sel-line': 83,
        'sel-line-start': 1998,
        'selection_end': 2016,
        'selection_start': 2016,
        'zoom': 0},
                       loc('Exercises/ex1_2.md'): {'attrib-starts': [],
        'code-line': ">>> prices = { 'IBM': 91.1, 'GOOG': 490.1, 'AAPL':312.23 }\r\n",
        'first-line': 390,
        'folded-linenos': [],
        'sel-line': 370,
        'sel-line-start': 7497,
        'selection_end': 7555,
        'selection_start': 7501,
        'zoom': 0},
                       loc('Exercises/ex1_3.md'): {'attrib-starts': [],
        'code-line': 'MSFT 50 65.10\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 409,
        'selection_end': 422,
        'selection_start': 417,
        'zoom': 0},
                       loc('Exercises/ex1_4.md'): {'attrib-starts': [],
        'code-line': '## (c) Interactive Experimentation\r\n',
        'first-line': 57,
        'folded-linenos': [],
        'sel-line': 54,
        'sel-line-start': 1720,
        'selection_end': 1754,
        'selection_start': 1754,
        'zoom': 0},
                       loc('Exercises/ex1_5.md'): {'attrib-starts': [],
        'code-line': '      GOOG        100     490.10\r\n',
        'first-line': 33,
        'folded-linenos': [],
        'sel-line': 38,
        'sel-line-start': 790,
        'selection_end': 817,
        'selection_start': 817,
        'zoom': 0},
                       loc('Exercises/ex1_6.md'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 60,
        'folded-linenos': [],
        'sel-line': 68,
        'sel-line-start': 1831,
        'selection_end': 1831,
        'selection_start': 1831,
        'zoom': 0},
                       loc('Exercises/ex2_1.md'): {'attrib-starts': [],
        'code-line': 'Run this program using `python3 -i readrides.py` and look at the\r\n',
        'first-line': 165,
        'folded-linenos': [],
        'sel-line': 127,
        'sel-line-start': 3657,
        'selection_end': 3704,
        'selection_start': 3689,
        'zoom': 0},
                       loc('Exercises/ex2_2.md'): {'attrib-starts': [],
        'code-line': '----\r\n',
        'first-line': 168,
        'folded-linenos': [],
        'sel-line': 187,
        'sel-line-start': 5618,
        'selection_end': 5622,
        'selection_start': 5622,
        'zoom': 0},
                       loc('Exercises/ex2_3.md'): {'attrib-starts': [],
        'code-line': '>>> # RESTART\r\n',
        'first-line': 320,
        'folded-linenos': [],
        'sel-line': 335,
        'sel-line-start': 7697,
        'selection_end': 8132,
        'selection_start': 7697,
        'zoom': 0},
                       loc('Exercises/ex2_4.md'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 429,
        'folded-linenos': [],
        'sel-line': 449,
        'sel-line-start': 11047,
        'selection_end': 11047,
        'selection_start': 11047,
        'zoom': 0},
                       loc('Exercises/ex2_5.md'): {'attrib-starts': [],
        'code-line': '10\r\n',
        'first-line': 285,
        'folded-linenos': [],
        'sel-line': 308,
        'sel-line-start': 9106,
        'selection_end': 9108,
        'selection_start': 9108,
        'zoom': 0},
                       loc('Exercises/ex2_6.md'): {'attrib-starts': [],
        'code-line': '>>> tracemalloc.get_traced_memory()\r\n',
        'first-line': 270,
        'folded-linenos': [],
        'sel-line': 215,
        'sel-line-start': 5596,
        'selection_end': 5631,
        'selection_start': 5600,
        'zoom': 0},
                       loc('Exercises/ex3_1.md'): {'attrib-starts': [],
        'code-line': ">>> portfolio = read_portfolio('Data/portfolio.csv')\r\n",
        'first-line': 69,
        'folded-linenos': [],
        'sel-line': 36,
        'sel-line-start': 880,
        'selection_end': 930,
        'selection_start': 912,
        'zoom': 0},
                       loc('Exercises/ex3_2.md'): {'attrib-starts': [],
        'code-line': '`...` A course by [dabeaz](https://www.dabeaz.com)  \r\n',
        'first-line': 157,
        'folded-linenos': [],
        'sel-line': 166,
        'sel-line-start': 4461,
        'selection_end': 4513,
        'selection_start': 4513,
        'zoom': 0},
                       loc('Exercises/ex3_3.md'): {'attrib-starts': [],
        'code-line': 'Change the `read_portfolio()` function to use the new `Stock.from_row()`\r\n',
        'first-line': 203,
        'folded-linenos': [],
        'sel-line': 129,
        'sel-line-start': 3261,
        'selection_end': 3304,
        'selection_start': 3304,
        'zoom': 0},
                       loc('Exercises/ex3_4.md'): {'attrib-starts': [],
        'code-line': ">>> s = Stock('GOOG',100,490.10)\r\n",
        'first-line': 93,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 672,
        'selection_end': 716,
        'selection_start': 686,
        'zoom': 0},
                       loc('Exercises/ex3_5.md'): {'attrib-starts': [],
        'code-line': '**Discussion**\r\n',
        'first-line': 168,
        'folded-linenos': [],
        'sel-line': 179,
        'sel-line-start': 6192,
        'selection_end': 6206,
        'selection_start': 6206,
        'zoom': 0},
                       loc('Exercises/index.md'): {'attrib-starts': [],
        'code-line': 'David M. Beazley  \r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 66,
        'selection_end': 84,
        'selection_start': 84,
        'zoom': 0},
                       loc('Exercises/soln2_1.md'): {'attrib-starts': [],
        'code-line': '    Read the bus ride data as a list of instances\r\n',
        'first-line': 53,
        'folded-linenos': [],
        'sel-line': 61,
        'sel-line-start': 1639,
        'selection_end': 1674,
        'selection_start': 1674,
        'zoom': 0},
                       loc('Exercises/soln2_2.md'): {'attrib-starts': [],
        'code-line': '# Exercise 2.2 - Solution\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('Exercises/soln2_5.md'): {'attrib-starts': [],
        'code-line': 'class RideData(collections.Sequence):\r\n',
        'first-line': 79,
        'folded-linenos': [],
        'sel-line': 95,
        'sel-line-start': 2631,
        'selection_end': 2645,
        'selection_start': 2637,
        'zoom': 0},
                       loc('Exercises/soln2_6.md'): {'attrib-starts': [],
        'code-line': '    return records\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 475,
        'selection_end': 493,
        'selection_start': 493,
        'zoom': 0},
                       loc('Exercises/soln3_1.md'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 198,
        'selection_end': 219,
        'selection_start': 198,
        'zoom': 0},
                       loc('Exercises/soln3_2.md'): {'attrib-starts': [],
        'code-line': "    print(('-'*10 + ' ')*len(fields))\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 200,
        'selection_end': 351,
        'selection_start': 200,
        'zoom': 0},
                       loc('Exercises/soln3_3.md'): {'attrib-starts': [],
        'code-line': '        self.shares -= nshares\r\n',
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 325,
        'selection_end': 353,
        'selection_start': 353,
        'zoom': 0},
                       loc('Exercises/soln3_4.md'): {'attrib-starts': [],
        'code-line': '        self.shares = shares\r\n',
        'first-line': 153,
        'folded-linenos': [],
        'sel-line': 158,
        'sel-line-start': 3652,
        'selection_end': 3678,
        'selection_start': 3678,
        'zoom': 0},
                       loc('Exercises/soln3_5.md'): {'attrib-starts': [],
        'code-line': 'class HTMLTableFormatter(TableFormatter):\r\n',
        'first-line': 24,
        'folded-linenos': [],
        'sel-line': 33,
        'sel-line-start': 885,
        'selection_end': 917,
        'selection_start': 917,
        'zoom': 0},
                       loc('Exercises/soln3_6.md'): {'attrib-starts': [],
        'code-line': '## (b) Making Objects Comparable\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 317,
        'selection_end': 349,
        'selection_start': 349,
        'zoom': 0},
                       loc('Solutions/1_1/art.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 341,
        'selection_end': 341,
        'selection_start': 341,
        'zoom': 0},
                       loc('Solutions/1_3/pcost.py'): {'attrib-starts': [],
        'code-line': '# pcost.py\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('art.py'): {'attrib-starts': [],
                                       'code-line': '\tdraw(int(sys.argv[1]), int(sys.argv[2]))',
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 15,
                                       'sel-line-start': 301,
                                       'selection_end': 342,
                                       'selection_start': 342,
                                       'zoom': 0},
                       loc('pcost.py'): {'attrib-starts': [],
        'code-line': '\t',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 648,
        'selection_end': 649,
        'selection_start': 649,
        'zoom': 0}}
search.search-history = ['setat',
                         'set',
                         'geta',
                         'seta',
                         'next',
                         '22',
                         '151']
testing.stored-results = (1,
                          [],
                          {})
